// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  email      String    @unique
  name       String?
  role       String    @default("editor") // admin/editor/reader
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  magicLinks MagicLink[]
  procedures Procedure[] @relation("author")
  auditLogs  AuditLog[]
}

model MagicLink {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  tokenHash  String
  expiresAt  DateTime
  usedAt     DateTime?
  createdAt  DateTime @default(now())
  requestIp  String?
  requestUA  String?
  redirect   String?
}

model Procedure {
  id            String           @id @default(uuid())
  title         String
  summary       String?
  contentHtml   String?
  contentDelta  Json?
  status        String           @default("draft") // draft/published/archived
  author        User?            @relation("author", fields: [authorId], references: [id])
  authorId      String?
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  versions      ProcedureVersion[]
  tags          ProcedureTag[]
  auditLogs     AuditLog[]
}

model ProcedureVersion {
  id           String   @id @default(uuid())
  procedure    Procedure @relation(fields: [procedureId], references: [id])
  procedureId  String
  contentHtml  String?
  contentDelta Json?
  authorId     String?
  createdAt    DateTime @default(now())
  note         String?
}

model Tag {
  id    String @id @default(uuid())
  name  String @unique
  items ProcedureTag[]
}

model ProcedureTag {
  procedure   Procedure @relation(fields: [procedureId], references: [id])
  procedureId String
  tag         Tag       @relation(fields: [tagId], references: [id])
  tagId       String

  @@id([procedureId, tagId])
}

model AuditLog {
  id          String    @id @default(uuid())
  user        User?     @relation(fields: [userId], references: [id])
  userId      String?
  action      String
  procedure   Procedure? @relation(fields: [procedureId], references: [id])
  procedureId String?
  meta        Json?
  createdAt   DateTime  @default(now())
}
